version: 2
jobs:
  build base api:
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Get Auth0 certificate
          command: |
            mkdir certificate
            wget https://$AUTH0_DOMAIN.eu.auth0.com/pem -O ./certificate/tymly.pem
      - run:
          name: build image
          command: docker build --target base-test -t tymly-base .
      - run:
          name: Store Docker image
          command: docker save -o base-image.tar tymly-base
      - persist_to_workspace:
          root: .
          paths:
            - ./base-image.tar
  boot test:
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Load stored base image
          command: docker load -i /tmp/workspace/base-image.tar
      - run:
          name: Boot base image
          command: |
            docker pull postgres:9.6.12-alpine
            bash .circleci/tools/test
  vulnerability scan:
    docker:
      - image: cimg/node:lts
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 19.03.12
      - restore_cache:
          key: vulnerability-db
      - run:
          name: Load stored base image
          command: docker load -i /tmp/workspace/base-image.tar
      - run:
          name: Scan api and app images
          command: |
            trivy_version=$(
              curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | \
              grep '"tag_name":' | \
              sed -E 's/.*"v([^"]+)".*/\1/'
            )
            wget https://github.com/aquasecurity/trivy/releases/download/v${trivy_version}/trivy_${trivy_version}_Linux-64bit.tar.gz
            tar zxvf trivy_${trivy_version}_Linux-64bit.tar.gz
            ./trivy --quiet --ignore-unfixed --auto-refresh tymly-base
            ./trivy --exit-code 1 --severity CRITICAL --quiet --ignore-unfixed --auto-refresh tymly-base
      - save_cache:
          key: vulnerability-db
          paths:
            - $HOME/.cache/trivy
  release:
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          TZ: "Europe/London"
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Build tagged image
          command: docker build wmfs/tymly-base .
      - run:
          name: install
          command: npm install --save-dev semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/exec conventional-changelog-metahub
      - run:
          name: Deploy images to Docker hub
          command: |
            npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            npx semantic-release


workflows:
  version: 2
  test_and_release:
    jobs:
    - build base api
    - boot test:
        requires:
          - build base api
    - vulnerability scan:
        requires:
          - build base api
    - release:
        requires:
          - boot test
          - vulnerability scan
        filters:
          branches:
            only: master

